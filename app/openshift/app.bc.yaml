apiVersion: template.openshift.io/v1
kind: Template
metadata:
  creationTimestamp: null
  labels:
    build: invasivebci-app
  name: invasivebci-app
parameters:
  - name: NAME
    displayName: Name
    description: Image name
    required: true
    value: invasivebci-app
  - name: SUFFIX
    displayName: Name Suffix
    description: A suffix appended to all objects
    required: true
    value: '-dev'
  - name: VERSION
    required: true
    value: '1.0'
  - name: SOURCE_CONTEXT_DIR
    required: true
    value: app
  - name: SOURCE_REPOSITORY_URL
    required: true
    value: https://github.com/bcgov/invasivesbc
  - name: SOURCE_REPOSITORY_REF
    required: false
    value: dev
  - name: BASE_IMAGE_URL
    required: true
    value: registry.access.redhat.com/ubi8/nodejs-16:13
  - name: SOURCE_IMAGE_NAME
    required: true
    value: nodejs-16
  - name: SOURCE_IMAGE_TAG
    required: true
    value: latest
  - name: SSO_URL
    description: Key cloak login url
    value: 'https://oidc.gov.bc.ca'
  - name: SSO_CLIENT_ID
    description: Client Id for application
    value: 'invasives-bc-1849'
  - name: SSO_REALM
    description: Realm identifier or name
    value: onestopauth-business
  - name: REACT_APP_API_HOST
    description: API host for application backend
    value: ''
  - name: REDIRECT_URI
    value: ''
objects:
  - kind: ImageStream
    apiVersion: v1
    metadata:
      name: ${SOURCE_IMAGE_NAME}
      creationTimestamp: null
      annotations:
        description: Nodejs Base Image
      labels:
        shared: 'true'
    spec:
      lookupPolicy:
        local: false
      tags:
        - name: ${SOURCE_IMAGE_TAG}
          annotations: null
          from:
            kind: DockerImage
            name: ${BASE_IMAGE_URL}
          importPolicy: {}
          referencePolicy:
            type: Local
  - kind: ImageStream
    apiVersion: v1
    metadata:
      name: '${NAME}'
      creationTimestamp: null
      annotations:
        description: Nodejs Runtime Image
      labels:
        shared: 'true'
    spec:
      lookupPolicy:
        local: false
  - apiVersion: v1
    kind: BuildConfig
    metadata:
      name: '${NAME}${SUFFIX}'
      creationTimestamp:
      labels: {}
      annotations: {}
    spec:
      failedBuildsHistoryLimit: 5
      nodeSelector:
      output:
        to:
          kind: ImageStreamTag
          name: '${NAME}:${VERSION}'
      postCommit: {}
      resources:
        limits:
          cpu: "0"
          memory: "0"
        requests:
          cpu: "0"
          memory: "0"
      runPolicy: Serial
      source:
        contextDir: '${SOURCE_CONTEXT_DIR}'
        git:
          uri: '${SOURCE_REPOSITORY_URL}'
          ref: '${SOURCE_REPOSITORY_REF}'
        type: Git
      strategy:
        dockerStrategy:
          from:
            kind: ImageStreamTag
            name: ${SOURCE_IMAGE_NAME}:${SOURCE_IMAGE_TAG}
          env:
            - name: REACT_APP_API_HOST
              value: ${REACT_APP_API_HOST}
            - name: REDIRECT_URI
              value: ${REDIRECT_URI}
            - name: SSO_URL
              value: ${SSO_URL}
            - name: SSO_CLIENT_ID
              value: ${SSO_CLIENT_ID}
            - name: SSO_REALM
              value: ${SSO_REALM}
        type: Docker
      successfulBuildsHistoryLimit: 5
      triggers:
        - type: ConfigChange
        - type: ImageChange
    status:
      lastVersion: 7
